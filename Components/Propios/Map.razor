@rendermode InteractiveServer
@inject IJSRuntime JSx
@code {

    [Parameter] public List<Detencion> Detenciones { get; set; } = new();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSx.InvokeVoidAsync("CargarMapa");

            var paramx = Newtonsoft.Json.JsonConvert.SerializeObject(Detenciones);

            await JSx.InvokeVoidAsync("CargarMarcadores", paramx);
        }
    }
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

<style>
    html,
    body {
        height: 100%;
        margin: 0;
    }

    .leaflet-container {
        height: 400px;
        width: 100%;
        max-width: 100%;
        max-height: 100%;
    }
</style>

<div id="map" style="width: 100%; height: 400px;"></div>


<script>

    var mapa = null;

    CargarMapa = function () {

        map = L.map('map').setView([18.608288416826742, -70.2537288419647], 8);

        const tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        function onMapClick(e) {
            popup
                .setLatLng(e.latlng)
                .setContent(`You clicked the map at ${e.latlng.toString()}`)
                .openOn(map);
        }

        map.on('click', onMapClick);
    }

    function CargarMarcadores(detenciones){
    detenciones = JSON.parse(detenciones);
    for(x = 0; x < detenciones.length; x++){
        detencion = detenciones[x];
        L.marker([detencion.Latitud, detencion.Longitud]).addTo(map).bindPopup(detencion.Nombre);
    }
    }

</script>
